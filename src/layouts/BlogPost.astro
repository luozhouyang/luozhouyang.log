---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import Badge from '../components/ui/Badge.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, tags = [] } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
	</head>

	<body class="min-h-screen bg-background font-sans antialiased">
		<Header />
		<main class="container py-10">
			<article class="mx-auto max-w-3xl">
				<div class="prose prose-lg dark:prose-invert max-w-none">
					<div class="mb-8 text-center">
						<div class="text-muted-foreground mb-2">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="italic mt-1">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1 class="text-4xl font-bold tracking-tight sm:text-5xl mb-4">{title}</h1>
						{tags.length > 0 && (
							<div class="flex flex-wrap justify-center gap-2 mb-6">
								{tags.map((tag) => (
									<Badge variant="secondary" asChild>
										<a href={`/blog/tags/${tag}`}>{tag}</a>
									</Badge>
								))}
							</div>
						)}
						<hr class="my-6 border-t border-border"/>
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
